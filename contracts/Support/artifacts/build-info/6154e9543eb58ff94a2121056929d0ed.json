{
	"id": "6154e9543eb58ff94a2121056929d0ed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Support/ReportStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"./Model.sol\";\r\n\r\n\r\ncontract ReportStorage {\r\n\r\n    /// @dev Owner is the contract address that created the smart contract\r\n    address payable owner;\r\n    /// @dev\r\n    uint256 public listingfee = 0.002 ether;\r\n    /// @dev The fee charged by the marketplace to be allowed to list an NFT\r\n    uint256 listPrice = 0.002 ether;\r\n    /// @dev This mapping mas tokenId to the NFT info and is helpful when retrieving details about a tokenId\r\n    mapping(uint256 => Model.HealthItem) internal idToListedToken;\r\n    \r\n}"
			},
			"contracts/Support/Model.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\ncontract Model {\r\n    \r\n    /// @notice The structure to store info about a listed Item\r\n    struct HealthItem {\r\n        uint tokenId;\r\n        address payable owner;\r\n        address payable seller;\r\n        uint256 price;\r\n        bool currentlyListed;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Support/Model.sol": {
				"Model": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Support/Model.sol\":60:325  contract Model {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Support/Model.sol\":60:325  contract Model {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205c67a3579427f0c3bd086f1610413ae6b40aa67062f46d62a3134c4ab4bcd7d064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212205c67a3579427f0c3bd086f1610413ae6b40aa67062f46d62a3134c4ab4bcd7d064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH8 0xA3579427F0C3BD08 PUSH16 0x1610413AE6B40AA67062F46D62A3134C 0x4A 0xB4 0xBC 0xD7 0xD0 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "60:265:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212205c67a3579427f0c3bd086f1610413ae6b40aa67062f46d62a3134c4ab4bcd7d064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH8 0xA3579427F0C3BD08 PUSH16 0x1610413AE6B40AA67062F46D62A3134C 0x4A 0xB4 0xBC 0xD7 0xD0 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "60:265:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 325,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 325,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 325,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 325,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 325,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c67a3579427f0c3bd086f1610413ae6b40aa67062f46d62a3134c4ab4bcd7d064736f6c63430008140033",
									".code": [
										{
											"begin": 60,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 325,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Support/Model.sol",
								"contracts/Support/ReportStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Support/Model.sol\":\"Model\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Support/Model.sol\":{\"keccak256\":\"0xce3d592f0b327ba4fa5ef1ef229263237da6deedf0306a0c750ead3eeb241854\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d0b74e644713a82ab7cfd2fcdaab107db75a148291c72fc9fb41e3a60ccb5e\",\"dweb:/ipfs/QmZD44mJufGwtVpkr7xpwWww9FV9hjDmnYWRF1npNmM2SQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Support/ReportStorage.sol": {
				"ReportStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "listingfee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"idToListedToken": {
								"details": "This mapping mas tokenId to the NFT info and is helpful when retrieving details about a tokenId"
							},
							"listPrice": {
								"details": "The fee charged by the marketplace to be allowed to list an NFT"
							},
							"owner": {
								"details": "Owner is the contract address that created the smart contract"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Support/ReportStorage.sol\":87:580  contract ReportStorage {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Support/ReportStorage.sol\":265:276  0.002 ether */\n  0x071afd498d0000\n    /* \"contracts/Support/ReportStorage.sol\":237:276  uint256 public listingfee = 0.002 ether */\n  0x01\n  sstore\n    /* \"contracts/Support/ReportStorage.sol\":381:392  0.002 ether */\n  0x071afd498d0000\n    /* \"contracts/Support/ReportStorage.sol\":361:392  uint256 listPrice = 0.002 ether */\n  0x02\n  sstore\n    /* \"contracts/Support/ReportStorage.sol\":87:580  contract ReportStorage {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Support/ReportStorage.sol\":87:580  contract ReportStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39c6a808\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Support/ReportStorage.sol\":237:276  uint256 public listingfee = 0.002 ether */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_8:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_9:\n        /* \"#utility.yul\":177:201   */\n      tag_13\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_8\n      jump\t// in\n    tag_13:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_7:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_15\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_9\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f7bf232440db6741c88cc0a220631b22f3e56a3d7cb153c6a1db0a5ad22fa3ba64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405266071afd498d000060015566071afd498d0000600255348015610025575f80fd5b5060ad806100325f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c806339c6a80814602a575b5f80fd5b60306044565b604051603b91906060565b60405180910390f35b60015481565b5f819050919050565b605a81604a565b82525050565b5f60208201905060715f8301846053565b9291505056fea2646970667358221220f7bf232440db6741c88cc0a220631b22f3e56a3d7cb153c6a1db0a5ad22fa3ba64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x71AFD498D0000 PUSH1 0x1 SSTORE PUSH7 0x71AFD498D0000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x25 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xAD DUP1 PUSH2 0x32 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39C6A808 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5A DUP2 PUSH1 0x4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x71 PUSH0 DUP4 ADD DUP5 PUSH1 0x53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xBF 0x23 0x24 BLOCKHASH 0xDB PUSH8 0x41C88CC0A220631B 0x22 RETURN 0xE5 PUSH11 0x3D7CB153C6A1DB0A5AD22F LOG3 0xBA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "87:493:1:-:0;;;265:11;237:39;;381:11;361:31;;87:493;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@listingfee_24": {
									"entryPoint": 68,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 83,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 74,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c806339c6a80814602a575b5f80fd5b60306044565b604051603b91906060565b60405180910390f35b60015481565b5f819050919050565b605a81604a565b82525050565b5f60208201905060715f8301846053565b9291505056fea2646970667358221220f7bf232440db6741c88cc0a220631b22f3e56a3d7cb153c6a1db0a5ad22fa3ba64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39C6A808 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5A DUP2 PUSH1 0x4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x71 PUSH0 DUP4 ADD DUP5 PUSH1 0x53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xBF 0x23 0x24 BLOCKHASH 0xDB PUSH8 0x41C88CC0A220631B 0x22 RETURN 0xE5 PUSH11 0x3D7CB153C6A1DB0A5AD22F LOG3 0xBA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "87:493:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "34600",
								"executionCost": "44297",
								"totalCost": "78897"
							},
							"external": {
								"listingfee()": "2403"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 87,
									"end": 580,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 87,
									"end": 580,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 87,
									"end": 580,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 265,
									"end": 276,
									"name": "PUSH",
									"source": 1,
									"value": "71AFD498D0000"
								},
								{
									"begin": 237,
									"end": 276,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 237,
									"end": 276,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 381,
									"end": 392,
									"name": "PUSH",
									"source": 1,
									"value": "71AFD498D0000"
								},
								{
									"begin": 361,
									"end": 392,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 361,
									"end": 392,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 87,
									"end": 580,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 580,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 87,
									"end": 580,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 580,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 580,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 580,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 87,
									"end": 580,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 580,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7bf232440db6741c88cc0a220631b22f3e56a3d7cb153c6a1db0a5ad22fa3ba64736f6c63430008140033",
									".code": [
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "39C6A808"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 87,
											"end": 580,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 237,
											"end": 276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 237,
											"end": 276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 237,
											"end": 276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/Support/Model.sol",
								"contracts/Support/ReportStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"listingfee()": "39c6a808"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"listingfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"idToListedToken\":{\"details\":\"This mapping mas tokenId to the NFT info and is helpful when retrieving details about a tokenId\"},\"listPrice\":{\"details\":\"The fee charged by the marketplace to be allowed to list an NFT\"},\"owner\":{\"details\":\"Owner is the contract address that created the smart contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Support/ReportStorage.sol\":\"ReportStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Support/Model.sol\":{\"keccak256\":\"0xce3d592f0b327ba4fa5ef1ef229263237da6deedf0306a0c750ead3eeb241854\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d0b74e644713a82ab7cfd2fcdaab107db75a148291c72fc9fb41e3a60ccb5e\",\"dweb:/ipfs/QmZD44mJufGwtVpkr7xpwWww9FV9hjDmnYWRF1npNmM2SQ\"]},\"contracts/Support/ReportStorage.sol\":{\"keccak256\":\"0x2ddd7ecae8ba4263d9a2db3675c5297f762ad8bfa600b8bd3896816a3e0f3cd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66696bb364b6102e2e93fb4fd803044498aaa0c3df6f8c64e25c8eeeca3c9d5b\",\"dweb:/ipfs/QmYUvfYXNSVQfJ2n7tS3pwYJ41gZXL8apriQa9z3scnGUx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "contracts/Support/ReportStorage.sol:ReportStorage",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 24,
								"contract": "contracts/Support/ReportStorage.sol:ReportStorage",
								"label": "listingfee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 28,
								"contract": "contracts/Support/ReportStorage.sol:ReportStorage",
								"label": "listPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 34,
								"contract": "contracts/Support/ReportStorage.sol:ReportStorage",
								"label": "idToListedToken",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(HealthItem)13_storage)"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(HealthItem)13_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Model.HealthItem)",
								"numberOfBytes": "32",
								"value": "t_struct(HealthItem)13_storage"
							},
							"t_struct(HealthItem)13_storage": {
								"encoding": "inplace",
								"label": "struct Model.HealthItem",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/Support/ReportStorage.sol:ReportStorage",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 6,
										"contract": "contracts/Support/ReportStorage.sol:ReportStorage",
										"label": "owner",
										"offset": 0,
										"slot": "1",
										"type": "t_address_payable"
									},
									{
										"astId": 8,
										"contract": "contracts/Support/ReportStorage.sol:ReportStorage",
										"label": "seller",
										"offset": 0,
										"slot": "2",
										"type": "t_address_payable"
									},
									{
										"astId": 10,
										"contract": "contracts/Support/ReportStorage.sol:ReportStorage",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 12,
										"contract": "contracts/Support/ReportStorage.sol:ReportStorage",
										"label": "currentlyListed",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Support/Model.sol": {
				"ast": {
					"absolutePath": "contracts/Support/Model.sol",
					"exportedSymbols": {
						"Model": [
							14
						]
					},
					"id": 15,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Model",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 14,
							"linearizedBaseContracts": [
								14
							],
							"name": "Model",
							"nameLocation": "69:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Model.HealthItem",
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "88:59:0",
										"text": "@notice The structure to store info about a listed Item"
									},
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "187:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "182:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "182:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "221:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "205:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 5,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "205:15:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "253:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "237:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "237:15:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "278:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "270:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "270:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "currentlyListed",
											"nameLocation": "299:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "294:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 11,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "294:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "HealthItem",
									"nameLocation": "160:10:0",
									"nodeType": "StructDefinition",
									"scope": 14,
									"src": "153:169:0",
									"visibility": "public"
								}
							],
							"scope": 15,
							"src": "60:265:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:292:0"
				},
				"id": 0
			},
			"contracts/Support/ReportStorage.sol": {
				"ast": {
					"absolutePath": "contracts/Support/ReportStorage.sol",
					"exportedSymbols": {
						"Model": [
							14
						],
						"ReportStorage": [
							35
						]
					},
					"id": 36,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 16,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/Support/Model.sol",
							"file": "./Model.sol",
							"id": 17,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 36,
							"sourceUnit": 15,
							"src": "60:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReportStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "ReportStorage",
							"nameLocation": "96:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "119:70:1",
										"text": "@dev Owner is the contract address that created the smart contract"
									},
									"id": 20,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "211:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "195:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "195:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "223:8:1",
										"text": "@dev"
									},
									"functionSelector": "39c6a808",
									"id": 24,
									"mutability": "mutable",
									"name": "listingfee",
									"nameLocation": "252:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "237:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "237:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303032",
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "265:11:1",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000000_by_1",
											"typeString": "int_const 2000000000000000"
										},
										"value": "0.002"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "283:72:1",
										"text": "@dev The fee charged by the marketplace to be allowed to list an NFT"
									},
									"id": 28,
									"mutability": "mutable",
									"name": "listPrice",
									"nameLocation": "369:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "361:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "361:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303032",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "381:11:1",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000000_by_1",
											"typeString": "int_const 2000000000000000"
										},
										"value": "0.002"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "399:104:1",
										"text": "@dev This mapping mas tokenId to the NFT info and is helpful when retrieving details about a tokenId"
									},
									"id": 34,
									"mutability": "mutable",
									"name": "idToListedToken",
									"nameLocation": "555:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "509:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_HealthItem_$13_storage_$",
										"typeString": "mapping(uint256 => struct Model.HealthItem)"
									},
									"typeName": {
										"id": 33,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 30,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "517:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "509:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_HealthItem_$13_storage_$",
											"typeString": "mapping(uint256 => struct Model.HealthItem)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 32,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 31,
												"name": "Model.HealthItem",
												"nameLocations": [
													"528:5:1",
													"534:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 13,
												"src": "528:16:1"
											},
											"referencedDeclaration": 13,
											"src": "528:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_HealthItem_$13_storage_ptr",
												"typeString": "struct Model.HealthItem"
											}
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 36,
							"src": "87:493:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:547:1"
				},
				"id": 1
			}
		}
	}
}